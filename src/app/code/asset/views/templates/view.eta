<% 
  const loggedIn = it?._locals?.loggedIn
  const generateProxyUrl = it?._locals?.functions?.generateProxyUrl

  var upvotes = it?.info?.upvotes ?? 0
  var total = upvotes + it?.info?.downvotes ?? 0
  var percent = 0
  var stars = 0
  
  if(total !== 0) {
    percent = Math.round((upvotes / total) * 100).toFixed(2)
    stars = Math.round((percent + 5) / 10).toFixed(1) / 2
  }


  function returnYoutubeEmbedOrReturnUrl(url) {
    if (url.includes('&t=')) {
      url = url.split('&t=')[0]
    }

    if(url.includes('youtube.com')) {
      return url.replace('watch?v=', 'embed/')
    } else if(url.includes('youtu.be')) {
      return url.replace('youtu.be/', 'youtube.com/embed/')
    } else {
      return url
    }
  }

  it.meta = {
    title: `${it?.info?.title ?? 'Asset'} | Godot Asset Library`,
    description: it?.info?.quick_description ??  `Find out more about the FREE ${it?.info?.title} godot asset on Godot Asset Library.`,
    url: `https://godotassetlibrary.com/asset/${it?.info?.asset_id}/${encodeURI(it?.info?.title.replace(/\s/g, '-')).toLocaleLowerCase()}`,
    moduleName: 'asset',
    jsonLd: {
      "@context": "https://schema.org/",
      "@type": "Product",
      "name": it?.info?.title,
      "image": it?.info?.card_banner,
      "description": it?.info?.quick_description
    },
    image: generateProxyUrl(it.info.card_banner ?? it.info.icon_url),
  }

  if (stars > 0) {
    it.meta.jsonLd.aggregateRating = {
      "@type": "AggregateRating",
      "ratingValue": stars,
      "bestRating": "5",
      "worstRating": "0",
      "ratingCount": total
    }
  }
%>
<% layout('templates/components/layouts/promobar-nav-body-footer.eta') %>

<%~ includeFile('templates/components/partials/modal-install.eta', {downloadUrl: it?.info?.download_url}) %>
<%~ includeFile('templates/components/partials/modal-report.eta') %>
<%~ includeFile('templates/components/partials/modal-delete.eta') %>

<section class="page-asset">
  <div class="column">
    <div class="media <% if(it?.info?.previews.length <= 1) { %>single-image<% } %>">
      <% if(it?.info?.previews.length > 1) { %>
      <div class="thumbnails">
        <% if(it?.info?.previews.length !== 0) { %>
        <% it?.info?.previews.forEach(preview => { %>
        <div class="image">
          <img src="<%= generateProxyUrl(preview.thumbnail, 100, 100) %>"
            data-src="<%= generateProxyUrl(preview.thumbnail) %>" alt="<%= it?.info?.title %> thumbnail image"
            data-fallback-image="<%= preview.thumbnail %>" class="lazyload"
            onclick="updatePlayerImage('<%= returnYoutubeEmbedOrReturnUrl(preview.link) %>', '<%= generateProxyUrl(preview.link, 1920, 1080) %>')">
        </div>
        <% }) %>
        <% } else { %>
        <div class="image">
          <img src="<%= generateProxyUrl(it?.info?.icon_url) %>" alt="<%= it?.info?.title %> icon image">
        </div>
        <% } %>
      </div>
      <% } %>
      <div class="player">
        <div class="container">
          <% if(it?.info?.previews.length !== 0) { %>
          <% var link = it?.info?.previews[0].link %>
          <% if (returnYoutubeEmbedOrReturnUrl(link).includes('youtube')) { %>
          <iframe width="100%" height="100%" src="<%= returnYoutubeEmbedOrReturnUrl(link) %>" frameborder="0"
            allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
          <img style="display: none;" alt="<%= it?.info?.title %> image holder but it is empty">
          <% } else { %>
          <iframe width="100%" height="100%" frameborder="0" style="display: none;"
            allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
          <img src="<%= generateProxyUrl(it?.info?.previews[0].link, 100, 100) %>"
            data-src="<%= generateProxyUrl(it?.info?.previews[0].link, 1920, 1080) %>" class="lazyload"
            data-fallback-image="<%= it?.info?.previews[0].link %>" alt="<%= it?.info?.title %> hero image">
          <% } %>
          <% } else { %>
          <img src="<%= generateProxyUrl(it?.info?.card_banner ?? it?.info?.icon_url, 100, 100) %>"
            data-src="<%= generateProxyUrl(it?.info?.card_banner ?? it?.info?.icon_url, 1920, 1080) %>" class="lazyload"
            data-fallback-image="<%= it?.info?.previews[0].link %>" alt="<%= it?.info?.title %> hero image"
            alt="<%= it?.info?.title %> hero image">
          <% } %>
        </div>
      </div>
    </div>
    <div class="info">
      <!-- we'll implement this in the future probably™️ -->
      <!-- <div class="tabs">
        <ul>
          <li class="active">Description from README file</li>
          <li>Legacy Godot Asset Library Description</li>
        </ul>
      </div> -->
      <div class="details">
        <div class="section mobile-quick-info">
          <%~ includeFile('./quick-info.eta', it) %>
        </div>
        <div class="section">
          <label class="inline-dropdown">
            <h2>Asset Description</h2>
            <!--
            <div class="dropdown no-text-select" onclick="window.godotLibrary.dropdown.showContent(event, this)">
              <div class="value">README.md</div>
              <span class="iconify" data-icon="bxs:chevron-down"></span>
              <div class="options">
                <div>README.md</div>
                <div>Asset Library</div>
              </div>
            </div>
            -->
          </label>
          <% const descriptionFormatted = it?.info?.description?.replace(/\n/g, '<br>') %>
          <p><%~ descriptionFormatted %></p>
        </div>

        <div class="section">
          <h2>Reviews</h2>
          <%~ includeFile('templates/components/partials/stars.eta', it) %>

          <div class="reviews">
            <% if (it?.comments) { %>
            <% const comments = it?.comments ?? [] %>
            <% comments.forEach(comment => { %>
            <div class="review">
              <div class="header">
                <span class="headline"><%= comment.headline %></span>
                <div class="dropdown no-text-select" onclick="window.godotLibrary.dropdown.showContent(event, this)">
                  <span class="iconify" data-icon="akar-icons:more-horizontal"></span>
                  <div class="options">
                    <div onclick="openReportModal(event, '<%= String(comment.human_id) %>')">Report</div>
                  </div>
                </div>
              </div>
              <span class="username"><%= comment.username %></span>
              <span class=" rated">Rated <%= comment.review_type %></span>
              <div class="review-body">
                <%= comment.text %>
              </div>
            </div>
            <% }) %>
            <% } %>
          </div>
        </div>
        <div class="section">
          <form method="PATCH" action="/asset/review/<%= it?.info?.asset_id %>" class="write-review"
            onsubmit="window.godotLibrary.formTools.sendFormAjax(event, this)">
            <h2>Your Rating</h2>
            <label class="rating-select">
              <input type="radio" name="rating" value="positive" required
                <%= it?.usersAssetReview?.review_type === 'positive' ? 'checked' : '' %>
                <% if(!loggedIn) { %>disabled<% } %>>
              <div class="label <% if(!loggedIn) { %>disabled<% } %>">
                <span class="iconify" data-icon="bi:hand-thumbs-up-fill"
                  <%= it?.usersAssetReview?.review_type === 'false' ? 'checked' : '' %>></span>
                <span>This addon is good</span>
              </div>
            </label>
            <label class="rating-select">
              <input type="radio" name="rating" value="negative" required <% if(!loggedIn) { %>disabled<% } %>>
              <div class="label <% if(!loggedIn) { %>disabled<% } %>">
                <span class="iconify" data-icon="bi:hand-thumbs-down-fill"></span>
                <span>This addon is not good</span>
              </div>
            </label>
            <div class="requirement">Headline must be at least 3 characters but not more than 50</div>
            <div class="input-container">
              <input name="asset_review_headline" class="input" id="asset-review-headline" type="text" placeholder=" "
                value="<%= it?.usersAssetReview?.headline ? it?.usersAssetReview?.headline : '' %>"
                <% if(!loggedIn) { %>disabled<% } %>>
              <label for="asset-review-headline" class="placeholder">Headline (optional)</label>
            </div>
            <div class="requirement">Review must be at least 5 characters but not more than 500</div>
            <div class="input-container">
              <textarea name="asset_review" class="input" id="asset-review" type="text" placeholder=" "
                <% if(!loggedIn) { %>disabled<% } %>><%= it?.usersAssetReview?.text ? it?.usersAssetReview?.text : '' %></textarea>
              <label for="asset-review" class="placeholder">Review (optional)</label>
            </div>
            <div class="actions">
              <% if(loggedIn) { %>
              <button type="submit"><%= it?.hasUserReviewedAsset ? 'Update' : 'Submit' %></button>
              <% } %>
              <% if(!loggedIn) { %>
              <div class="notice">
                Please <a href="/register" title="Go to login / register page">sign in</a> to add a review
              </div>
              <% } %>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>
  <div class="desktop-quick-info">
    <%~ includeFile('./quick-info.eta', it) %>
  </div>
  <script>
    function updatePlayerImage(image, proxied) {
      if (image.includes('youtube')) {
        document.querySelector('.player img').style.display = 'none';
        document.querySelector('.player iframe').style.display = 'block';
        document.querySelector('.player iframe').src = image;
      } else {
        document.querySelector('.player iframe').style.display = 'none';
        document.querySelector('.player img').style.display = 'block';
        document.querySelector('.player img').src = proxied;
      }
    }

    function openInstallModal(event) {
      document.querySelector('.modal.install').classList.add('active')
      event.stopPropagation()
    }

    function openReportModal(event, commentId) {
      const modalSelector = document.querySelector('.modal.report')
      modalSelector.classList.add('active')
      modalSelector.querySelector('form').setAttribute('action', `/asset/report/review/${commentId}`)
      event.stopPropagation()
    }
  </script>
</section>
